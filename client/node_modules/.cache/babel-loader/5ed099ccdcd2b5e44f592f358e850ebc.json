{"ast":null,"code":"var _jsxFileName = \"/Users/mina/Desktop/Ganzi_Frontend/Frontend/client/src/providers/Peer.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useMemo, useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeerContext = /*#__PURE__*/React.createContext(null);\nexport const usePeer = () => {\n  _s();\n  return React.useContext(PeerContext);\n};\n_s(usePeer, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const PeerProvider = props => {\n  _s2();\n  const [remoteStream, setRemoteStream] = useState(null);\n  const peer = useMemo(() => new RTCPeerConnection({\n    iceServers: [{\n      /* STUN 서버 사용하여 WebRTC Peer Connection 매끄롭도록 */\n      urls: [\"stun:stun.l.google.com:19302\", \"stun:global.stun.twilio.com:3478\"]\n    }]\n  }), []);\n  const createOffer = async () => {\n    const offer = await peer.createOffer();\n    await peer.setLocalDescription(offer);\n    return offer;\n  };\n  const createAnswer = async offer => {\n    await peer.setRemoteDescription(offer);\n    const answer = await peer.createAnswer();\n    await peer.setLocalDescription(answer);\n    return answer;\n  };\n  const setRemoteAns = async ans => {\n    await peer.setRemoteDescription(ans);\n  };\n  const sendStream = async stream => {\n    const tracks = stream.getTracks();\n\n    // 이미 해당 트랙이 추가되었는지 확인\n    tracks.forEach(track => {\n      const senders = peer.getSenders();\n      const existingSender = senders.find(sender => sender.track === track);\n\n      // 트랙이 이미 추가되지 않은 경우에만 추가\n      if (!existingSender) {\n        const sender = peer.addTrack(track, stream);\n        console.log('Track added:', track);\n      }\n    });\n  };\n  const handleTrackEvent = useCallback(ev => {\n    const streams = ev.streams;\n    setRemoteStream(streams[0]);\n  }, []);\n\n  // const handleNegosiation = useCallback(() =>\n  // {\n  //     console.log(\"Neg Needed\");\n  // },[])\n\n  useEffect(() => {\n    peer.addEventListener(\"track\", handleTrackEvent);\n    // peer.addEventListener('negotiationneeded',handleNegosiation);\n    return () => {\n      // peer.removeEventListener('track', handleTrackEvent)\n    };\n  }, [handleTrackEvent, peer]);\n  return /*#__PURE__*/_jsxDEV(PeerContext.Provider, {\n    value: {\n      peer,\n      createOffer,\n      createAnswer,\n      setRemoteAns,\n      sendStream,\n      remoteStream\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s2(PeerProvider, \"heVEnjVHvTruCYjECauIbeG2dC0=\");\n_c = PeerProvider;\nvar _c;\n$RefreshReg$(_c, \"PeerProvider\");","map":{"version":3,"names":["React","useMemo","useEffect","useState","useCallback","jsxDEV","_jsxDEV","PeerContext","createContext","usePeer","_s","useContext","PeerProvider","props","_s2","remoteStream","setRemoteStream","peer","RTCPeerConnection","iceServers","urls","createOffer","offer","setLocalDescription","createAnswer","setRemoteDescription","answer","setRemoteAns","ans","sendStream","stream","tracks","getTracks","forEach","track","senders","getSenders","existingSender","find","sender","addTrack","console","log","handleTrackEvent","ev","streams","addEventListener","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mina/Desktop/Ganzi_Frontend/Frontend/client/src/providers/Peer.jsx"],"sourcesContent":["import React, { useMemo, useEffect, useState, useCallback } from \"react\";\n\nconst PeerContext = React.createContext(null);\n\nexport const usePeer = () => React.useContext(PeerContext);\n\nexport const PeerProvider = (props) => {\n    const [remoteStream, setRemoteStream] = useState(null);\n    const peer = useMemo(() => new RTCPeerConnection({\n        iceServers : [\n            {\n                /* STUN 서버 사용하여 WebRTC Peer Connection 매끄롭도록 */\n                urls: [\n                    \"stun:stun.l.google.com:19302\",\n                    \"stun:global.stun.twilio.com:3478\"\n                ],\n            },\n        ],    \n     }), \n    []\n); \n\n    const createOffer = async () => {\n        const offer = await peer.createOffer();\n        await peer.setLocalDescription(offer);\n        return offer;\n    };\n\n    const createAnswer = async (offer) => {\n        await peer.setRemoteDescription(offer);\n        const answer = await peer.createAnswer();\n        await peer.setLocalDescription(answer);\n        return answer;\n    };\n\n    const setRemoteAns = async (ans) => {\n        await peer.setRemoteDescription(ans);\n    };\n\n    const sendStream = async (stream) => {\n        const tracks = stream.getTracks();\n    \n        // 이미 해당 트랙이 추가되었는지 확인\n        tracks.forEach((track) => {\n            const senders = peer.getSenders();\n            const existingSender = senders.find((sender) => sender.track === track);\n    \n            // 트랙이 이미 추가되지 않은 경우에만 추가\n            if (!existingSender) {\n                const sender = peer.addTrack(track, stream);\n                console.log('Track added:', track);\n            }\n        });\n    };\n\n    const handleTrackEvent = useCallback((ev) => {\n        const streams = ev.streams;\n        setRemoteStream(streams[0])\n    },[]);\n\n    // const handleNegosiation = useCallback(() =>\n    // {\n    //     console.log(\"Neg Needed\");\n    // },[])\n\n    useEffect(() => {\n        peer.addEventListener(\"track\", handleTrackEvent);\n        // peer.addEventListener('negotiationneeded',handleNegosiation);\n        return () => {\n            // peer.removeEventListener('track', handleTrackEvent)\n        }\n    },[handleTrackEvent, peer]);\n\n    return (\n    <PeerContext.Provider value = {{ peer, createOffer, createAnswer, setRemoteAns, sendStream,remoteStream }}>\n        {props.children}\n    </PeerContext.Provider>\n    );  \n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}